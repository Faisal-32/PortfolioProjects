Select max(total_laid_off), max(percentage_laid_off)
from layoffs_staging2;

Select *
from layoffs_staging2
where percentage_laid_off = 1
order by funds_raised_millions desc;

Select company, sum(total_laid_off)
from layoffs_staging2
group by company
order by 2 desc;

Select min(date), max(date)
from layoffs_staging2;

Select country, sum(total_laid_off)
from layoffs_staging2
group by country
order by 2 desc;

Select Year(date), sum(total_laid_off)
from layoffs_staging2
group by Year(date)
order by 1 desc;

Select stage, sum(total_laid_off)
from layoffs_staging2
group by stage
order by 2 desc;

Select company, avg(percentage_laid_off)
from layoffs_staging2
group by company
order by 2 desc;

Select substr(date, 1, 7) AS Month, sum(total_laid_off)
from layoffs_staging2
where substr(date, 1, 7) is not null
group by Month
order by 1 asc;


With Rolling_Total AS 
(
Select substr(date, 1, 7) AS Month, sum(total_laid_off) AS total_off
from layoffs_staging2
where substr(date, 1, 7) is not null
group by Month
order by 1 asc
)
Select Month, total_off, 
sum(total_off) Over (Order By Month) AS rolling_total
from Rolling_Total;

Select company, Year(date), sum(total_laid_off)
from layoffs_staging2
group by company, Year(date)
Order by 3 Desc;


With Company_Year (company, years, total_laid_off) AS
(
Select company, Year(date), sum(total_laid_off)
from layoffs_staging2
group by company, Year(date)
),
Company_Year_Rank AS
(
Select *, 
Dense_Rank() Over (partition by years order by total_laid_off Desc) AS Ranking
from Company_Year
where years is not null
)
Select *
from Company_Year_Rank
where Ranking <= 5;
